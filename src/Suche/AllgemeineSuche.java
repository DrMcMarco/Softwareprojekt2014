/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Suche;

import DAO.ApplicationException;
import DTO.*;
import Interfaces.*;
import JFrames.GUIFactory;
import java.awt.Color;
import java.awt.Component;
import java.sql.ResultSetMetaData;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JTextField;
import java.util.Iterator;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.apache.derby.client.am.ResultSet;
import org.apache.openjpa.persistence.query.SquareRootExpression;

/**
 *
 * @author Luca Terrasi 10.12.2014 Terrasi,Erstellung 12.01.2015 Terrasi,
 * Implementierung der Anwendungslogik
 */
public class AllgemeineSuche extends javax.swing.JInternalFrame implements InterfaceViewsFunctionality {

    /*
     Speichervariablen
     */
    private String suchKategorie;//Variable für den String aus der Combobox für Suchkategorien.
    private String suchEingabe;//Varible die die Sucheingabe speichert.
    private Collection<?> suchErgebnis; // Collection in der die gefunden Ergebnisse der Suche gespeichert werden.

    /*
     Variablen die für die Suchkategorien 
     */
    private final String auftragskopf = " Auftragskopf";
    private final String auftragsposition = "Auftragsposition";
    private final String artikel = "Artikel";
    private final String artikelkategorie = "Artikelkategorie";
    private final String anschrift = "Anschrift";
    private final String status = "Status";
    private final String geschaeftspartner = "Geschäftspartner";
    private final String zahlungskondition = "Zahlungskondition";

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 10.12.2014 Terrasi, angelegt */
    /* 12.01.2015 Terrasi, GuiFactoryübergeben und text für legende Übergeben.*/
    /*----------------------------------------------------------*/
    /**
     * Konstruktor, Suchfenster wird erzeugt.
     *
     * @param factory, übergebene GuiFactory
     */
    public AllgemeineSuche(GUIFactory factory) {
        initComponents();
        suchErgebnis = new ArrayList<>();//Initialisierung der Collection.

        // Variable erhält Wert aus der Combobox mit den Suchkategorien.
        suchKategorie = Auswahl_jComboBox.getSelectedItem().toString();
        legende_jTextArea.setText(gibLegendeAusDB(suchKategorie));//Übergebae der Legende durch Methode gibLegendeAusDB.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Button_jToolBar = new javax.swing.JToolBar();
        Auswaehlen_jButton = new javax.swing.JButton();
        Anzeige_jButton = new javax.swing.JButton();
        sucheStarten_jButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        Auswahl_jLabel = new javax.swing.JLabel();
        Auswahl_jComboBox = new javax.swing.JComboBox();
        Suche_jLabel = new javax.swing.JLabel();
        suchfeld_jTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Zusatzoption_jLabel = new javax.swing.JLabel();
        Erfasst_jCheckBox = new javax.swing.JCheckBox();
        Freigegeben_jCheckBox = new javax.swing.JCheckBox();
        AbgeschlossenjCheckBox = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        aufsteigend_jRadioButton = new javax.swing.JRadioButton();
        absteigend_jRadioButton = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        legende_jTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Suchen");
        setVisible(true);

        Button_jToolBar.setFloatable(false);
        Button_jToolBar.setRollover(true);
        Button_jToolBar.setEnabled(false);

        Auswaehlen_jButton.setText("Auswählen");
        Auswaehlen_jButton.setEnabled(false);
        Auswaehlen_jButton.setFocusable(false);
        Auswaehlen_jButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Auswaehlen_jButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Auswaehlen_jButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_jToolBar.add(Auswaehlen_jButton);

        Anzeige_jButton.setText("Anzeigen");
        Anzeige_jButton.setFocusable(false);
        Anzeige_jButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Anzeige_jButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_jToolBar.add(Anzeige_jButton);

        sucheStarten_jButton.setText("Suchen");
        sucheStarten_jButton.setFocusable(false);
        sucheStarten_jButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sucheStarten_jButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sucheStarten_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sucheStarten_jButtonActionPerformed(evt);
            }
        });
        Button_jToolBar.add(sucheStarten_jButton);

        jTextField1.setText("Statuszeile");
        jTextField1.setEnabled(false);

        Auswahl_jLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Auswahl_jLabel.setLabelFor(Auswahl_jComboBox);
        Auswahl_jLabel.setText("Auswahl der Suche :");

        Auswahl_jComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Auftragskopf", "Auftragsposition", "Artikel", "Artikelkategorie", "Geschäftspartner", "Zahlungskondition", "Anschrift", "Status" }));
        Auswahl_jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Auswahl_jComboBoxActionPerformed(evt);
            }
        });

        Suche_jLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Suche_jLabel.setLabelFor(suchfeld_jTextField);
        Suche_jLabel.setText("Suche :");

        suchfeld_jTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        suchfeld_jTextField.setText("Suchfeld");
        suchfeld_jTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                suchfeld_jTextFieldFocusGained(evt);
            }
        });

        jSeparator1.setEnabled(false);

        Zusatzoption_jLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Zusatzoption_jLabel.setLabelFor(Erfasst_jCheckBox);
        Zusatzoption_jLabel.setText("Zusatzoption :");

        Erfasst_jCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Erfasst_jCheckBox.setText("Erfasst");

        Freigegeben_jCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Freigegeben_jCheckBox.setText("Freigegeben");

        AbgeschlossenjCheckBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AbgeschlossenjCheckBox.setText("Abgeschlossen");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        aufsteigend_jRadioButton.setText("Auftsteigend");

        absteigend_jRadioButton.setText("Absteigend");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Sortierung :");

        jScrollPane1.setEnabled(false);

        legende_jTextArea.setEditable(false);
        legende_jTextArea.setBackground(new java.awt.Color(240, 240, 240));
        legende_jTextArea.setColumns(20);
        legende_jTextArea.setRows(5);
        jScrollPane1.setViewportView(legende_jTextArea);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Legende :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addComponent(jSeparator1)
            .addComponent(Button_jToolBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Zusatzoption_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Suche_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Auswahl_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AbgeschlossenjCheckBox)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(aufsteigend_jRadioButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(absteigend_jRadioButton))
                        .addComponent(suchfeld_jTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Auswahl_jComboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(Erfasst_jCheckBox)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Freigegeben_jCheckBox)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Button_jToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Auswahl_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Auswahl_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suchfeld_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Suche_jLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aufsteigend_jRadioButton)
                    .addComponent(absteigend_jRadioButton)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Erfasst_jCheckBox)
                            .addComponent(Freigegeben_jCheckBox)
                            .addComponent(Zusatzoption_jLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AbgeschlossenjCheckBox)
                        .addGap(50, 50, 50)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 10.12.2014 Terrasi angelegt */
    /*----------------------------------------------------------*/
    /*
     Beim wählen des Eingabefeldes, wird alles selektiert.
     */
    private void suchfeld_jTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_suchfeld_jTextFieldFocusGained
        suchfeld_jTextField.selectAll();
    }//GEN-LAST:event_suchfeld_jTextFieldFocusGained

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 10.12.2014 Terrasi angelegt */
    /* 16.12.2014 Terrasi, Implementierung der Logik.*/
    /*----------------------------------------------------------*/
    /**
     * Methode die aufgerufen wird beim wählen einer Suchkategorie. Je nach
     * Suchkategorie wird eine passende Legende im in der Maske angezeigt.
     *
     * @param evt
     */
    private void Auswahl_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Auswahl_jComboBoxActionPerformed
        // Variable erhält Wert aus der Combobox mit den Suchkategorien.
        suchKategorie = Auswahl_jComboBox.getSelectedItem().toString();

        // Aufruf der gibLegendeAusDB-Methode und übergebn Rückgabewert an TextArea.
        legende_jTextArea.setText(gibLegendeAusDB(suchKategorie));
    }//GEN-LAST:event_Auswahl_jComboBoxActionPerformed

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 16.12.2014 Terrasi,angelegt und Logik implementiert.*/
    /*----------------------------------------------------------*/
    /**
     * Methode die anhand der eingegebenen Suchkriterien eine Suche startet und
     * das Ergebnis in der Ergebnistabelle der Maske anzeigt.
     *
     * @param evt
     */
    @SuppressWarnings("empty-statement")
    private void sucheStarten_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sucheStarten_jButtonActionPerformed
        suchEingabe = suchfeld_jTextField.getText();
//        suchErgebnis.clear();//Leeren der Collection für neue Suchergebnisse.
//        String[][] info  ;
        try {
            if (!(suchErgebnis.isEmpty())) {
                suchErgebnis.clear();//Leeren der Collection für neue Suchergebnisse.
            }
            suchErgebnis.clear();//Leeren der Collection für neue Suchergebnisse.
            suchErgebnis = GUIFactory.getDAO().suchAbfrage(suchEingabe, suchKategorie);
            if (suchKategorie.equals(auftragskopf)) {
                for (Object o : suchErgebnis) {
                    Auftragskopf ak = (Auftragskopf) o;
                }
            } else if (suchKategorie.equals(auftragsposition)) {
                for (Object o : suchErgebnis) {
                    Auftragsposition ak = (Auftragsposition) o;

                }
            } else if (suchKategorie.equals(artikel)) {
                for (Object o : suchErgebnis) {
                    Artikel ak = (Artikel) o;
                }
            } else if (suchKategorie.equals(artikelkategorie)) {
                for (Object o : suchErgebnis) {
                    Artikelkategorie ak = (Artikelkategorie) o;
                    String[] tabelle = {"Kategorie-ID", "Beschreibung", "Kategoriename", "Kommentar"};
                    String[][] info = {{String.valueOf(ak.getKategorieID())}
                            , {ak.getBeschreibung()}, {ak.getKategoriename()}, {ak.getKommentar()}};
                    
                    System.out.println(String.valueOf(ak.getKategorieID()));
                    System.out.println(ak.getBeschreibung());
                    System.out.println(ak.getKategoriename());
//                    ResultSet rs = GUIFactory.getDAO().gibAlleKategorien().;
//                    ResultSetMetaData rsmetadata 0
                    
                    DefaultTableModel dtm = new DefaultTableModel();
                    Vector spaltenNamen = new Vector();
                    Vector zeilen = new Vector();
                    
                    for(String s: tabelle){
                        spaltenNamen.addElement(s);
                    }
                    
//                    System.out.println(info);
                    for(int i = 0; i < info.length; i++){
                        zeilen.addElement(info[i].toString());
                    }
                    dtm.setColumnIdentifiers(spaltenNamen);
                    dtm.addRow(zeilen);
                    jTable1.setModel(dtm);
                    
                }
            } else if (suchKategorie.equals(status)) {
                for (Object o : suchErgebnis) {
                    Status ak = (Status) o;
                }
            } else if (suchKategorie.equals(geschaeftspartner)) {
                for (Object o : suchErgebnis) {
                    Geschaeftspartner ak = (Geschaeftspartner) o;
                }
            } else if (suchKategorie.equals(zahlungskondition)) {
                for (Object o : suchErgebnis) {
                    Zahlungskondition ak = (Zahlungskondition) o;
                }

            }
        } catch (ApplicationException | NullPointerException | ClassCastException e) {//Fehlerbehandlung 
            //einer ApplikationException oder einer NullpointerException

        System.out.println(e.getMessage());//Ausgabe einer Fehlermeldung
        }
    
    }//GEN-LAST:event_sucheStarten_jButtonActionPerformed

/*----------------------------------------------------------*/
/* Datum Name Was */
/* 10.12.2014 Terrasi angelegt */
/* 12.12.2015 Terrasi, Implementierung der Logik.*/
/*----------------------------------------------------------*/
/**
 * Methode der man eine Suchkategorie übergibt und die passenden Suchparameter
 * herauffindet und diese als String wieder zurückgibt.
 *
 * @param suchkategorie, drie übergebene Suchkategorie
 * @return String mit den aus der Datenbank gespeicherten Suchparametern.
 */
public final String gibLegendeAusDB(String suchkategorie){
        String parameter = "";//Methodenvariable die die Suchparameter speichert.
        String ausgabelegende = "";// Variable die den Text enthält,
        // der als Legende in der Maske ausgegeben wird.
        
        
        try{//Try-Block falls eine ApplicationExeption auftritt.
            
            //Erzeugung eines Iterator um alle Werte der Collection zu erhalten.
            Iterator<String> it = GUIFactory.getDAO()
                    .gibSuchAttribute(suchkategorie).iterator();
            while(it.hasNext()){//Schleife für das durchinterieren.
                parameter += it.next() +", ";//Übergabe jedes einzelnen Wertes.
            }
            // Speichervariabel erhält Text für die Legende und die passenden Suchparameter.
            ausgabelegende = "Suchbefehl für " + suchKategorie +":\n\n"
                    + parameter + "\n\n"
                    + "Operatoren: =>  <=  <>  =  ?  <  >  *  \n\n"
                    + "Sortiert wird nach der ersten Spalte der Tabelle.\n\n"
                    + "Alle Suchabfragen sind durch ' ; ' zu trenne.";
        
        }catch(ApplicationException | NullPointerException e){//Fehlerbehandlung 
            //einer ApplikationException oder einer NullpointerException
            
            System.out.println(e.getMessage());//Ausgabe einer Fehlermeldung
        }
        
        return ausgabelegende;//Rückgabe eines Strings.
    }
    
    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 12.01.2015 Terrasi, Implementierung */
    /*----------------------------------------------------------*/
    /**
     * Schnittstellenmethode um alle eingabefelder zurück zu setzen.
     */
    @Override
        public void zuruecksetzen() {
        suchfeld_jTextField.setText("");
    }

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 12.01.2015 Terrasi, Implementierung */
    /*----------------------------------------------------------*/
    /**
     * Schnittstellenmethode mit der auf vollständigkeit der Eingaben geprüft wird.
     */
    @Override
        public void ueberpruefen() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 12.01.2015 Terrasi, Implementierung */
    /*----------------------------------------------------------*/
    /**
     * Schnittstellenmethode mit der die Richtigkeit der Eingabe beim Focuslost geprüft wird.
     * 
     * @param textfield, das zu übergeben JTextfield, indem der Focusgesetzt
     * ist.
     * @param syntax, String mit dem eine Eingabe auf das richtige Format hin
     * geprüft wird.
     * @param fehlermelgungtitel, Srting der den Titel der Fehlmeldung enthält.
     * @param fehlermeldung, String der die Fehlmeldung enthält.
     */
    @Override
        public void ueberpruefungVonFocusLost(JTextField textfield, String syntax, String fehlermelgungtitel, String fehlermeldung) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    /*----------------------------------------------------------*/
    /* Datum Name Was */
    /* 12.01.2015 Terrasi, Implementierung */
    /*----------------------------------------------------------*/
    /**
     * Methode mir der die Eingabefelder ohne einer entsprechenden Eingabe,
     * farblich markiert werden und eine Nachricht aufruft, die den Benutzer
     * darauf hinweist alle Eingaben zu tätigen.
     *
     * @param list, Arraylist in der die Components die keine Eingaben erhalten
     * haben, gespeichert sind.
     * @param fehlermelgungtitel, Srting der den Titel der Fehlmeldung enthält.
     * @param fehlermeldung, String der die Fehlmeldung enthält.
     * @param farbe, Color in der der Hintergrund der Components markiert werden
     * soll
     */
    @Override
        public void fehlEingabenMarkierung(ArrayList<Component> list, String fehlermelgungtitel, String fehlermeldung, Color farbe) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AbgeschlossenjCheckBox;
    private javax.swing.JButton Anzeige_jButton;
    private javax.swing.JButton Auswaehlen_jButton;
    private javax.swing.JComboBox Auswahl_jComboBox;
    private javax.swing.JLabel Auswahl_jLabel;
    private javax.swing.JToolBar Button_jToolBar;
    private javax.swing.JCheckBox Erfasst_jCheckBox;
    private javax.swing.JCheckBox Freigegeben_jCheckBox;
    private javax.swing.JLabel Suche_jLabel;
    private javax.swing.JLabel Zusatzoption_jLabel;
    private javax.swing.JRadioButton absteigend_jRadioButton;
    private javax.swing.JRadioButton aufsteigend_jRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea legende_jTextArea;
    private javax.swing.JButton sucheStarten_jButton;
    private javax.swing.JTextField suchfeld_jTextField;
    // End of variables declaration//GEN-END:variables
}
